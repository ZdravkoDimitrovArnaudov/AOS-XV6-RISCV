ARG policy SJF
ARG jlist 5,10,15

Here is the job list, with the run time of each job: 
  Job 0 ( length = 5.0 )
  Job 1 ( length = 10.0 )
  Job 2 ( length = 15.0 )

    - Se van ejecutando en orden de duracion, de menor a menor; es decir, primero el de 5, luego 10 y luego 15.
    Entonces... -- Response es cuando empieza a ejecutar --

    Execution trace:
    [time   0] Run job 0 for 5.00 secs (DONE)
    [time   5] Run job 1 for 10.00 secs (DONE)
    [time   15] Run job 2 for 15.00 secs (DONE)

Final statistics:
    Job   0 -- Response: 0.00  Turnaround 5.00  Wait 0.00
    Job   1 -- Response: 5.00  Turnaround 15.00  Wait 5.00
    Job   2 -- Response: 15.00  Turnaround 30.00  Wait 15.00

     Average -- Response: 6,67  Turnaround 16,6  Wait 6,67


-- STCF... A ver, aqui se van ejecutando segun van tardando menos tiempo. Si un job llega en medio y tarda menos que el que esta ejecutando
achica CPU y ejecuta...
Ejer:
    
ARG policy STCF
ARG jlist 15,5,17

Here is the job list, with the run time of each job: 
  Job 0 ( length = 15.0 )
  Job 1 ( length = 5.0 )
  Job 2 ( length = 17.0 )

Execution trace:
    [time   0] Run job 0 for 5.00 secs (DONE)
    [time   5] Run job 1 for 15.00 secs (DONE)
    [time   20] Run job 2 for 17.00 secs (DONE)

Final statistics:
    Job   0 -- Response: 0.00  Turnaround 5.00  Wait 0.00
    Job   1 -- Response: 5.00  Turnaround 20.00  Wait 5.00
    Job   2 -- Response: 20.00  Turnaround 37.00  Wait 20.00

     Average -- Response: 8,33 Turnaround 14  Wait 8,34

     -- SIN COMPROBAR, NO IMPLEMENTADO

-- RR, ejecuta un q (q = 3) y se va cogiendo en el orden de entrada... Da igual si inicialmente uno tarda mas que otro. Es desde que LLEGA
hasta que acaba. Wait: tiempo que ha estado esperando (no ejecutando) desde que llego hasta que acabo
ARG policy RR
ARG jlist 15,5,17

Here is the job list, with the run time of each job: 
  Job 0 ( length = 15.0 )
  Job 1 ( length = 5.0 )
  Job 2 ( length = 17.0 )

Execution trace:
    [time   0] Run job 0 for 3.00 secs
    [time   3] Run job 1 for 3.00 secs
    [time   6] Run job 2 for 3.00 secs
    
    [time   9] Run job 0 for 3.00 secs
    [time   12] Run job 1 for 2.00 secs (DONE)
    [time  14] Run job 2 for 3.00 secs

    [time   17] Run job 0 for 3.00 secs
    [time   20] Run job 2 for 3.00 secs

    [time   23] Run job 0 for 3.00 secs
    [time   26] Run job 2 for 3.00 secs

    [time   29] Run job 0 for 3.00 secs (DONE at 32)
    [time   32] Run job 2 for 3.00 secs
    [time   17] Run job 0 for 3.00 secs
    [time   35] Run job 2 for 2.00 secs (DONE AT 37)

Final statistics:
    Job   0 -- Response: 0.00  Turnaround 32  Wait 32 -15 = 17
    Job   1 -- Response: 3.00  Turnaround 14.0  Wait 14 - 5 = 9 
    Job   2 -- Response: 6.00  Turnaround 37.00  Wait 37 - 17 = 20

    Average -- Response: 3 Turnaround 27.67  Wait 46/3 = 15,33