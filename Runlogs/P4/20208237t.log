starting build

**********************************************************************

Test build
build xv6 using make

**********************************************************************
Trying to build project using make
make
ld  -m    elf_i386 -nostdlib --omagic \
	--entry=start --section-start=.text=0x7C00 \
	--output=kernel/bootblock.out kernel/bootasm.o kernel/bootmain.o
objcopy -S -O binary -j .text kernel/bootblock.out kernel/bootblock
./kernel/sign.pl kernel/bootblock
boot block is 419 bytes (max 510)
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/bio.o kernel/bio.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/console.o kernel/console.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/exec.o kernel/exec.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/file.o kernel/file.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/fs.o kernel/fs.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/ide.o kernel/ide.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/ioapic.o kernel/ioapic.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/kalloc.o kernel/kalloc.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/kbd.o kernel/kbd.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/lapic.o kernel/lapic.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/main.o kernel/main.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/mp.o kernel/mp.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/picirq.o kernel/picirq.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/pipe.o kernel/pipe.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/proc.o kernel/proc.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/spinlock.o kernel/spinlock.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/string.o kernel/string.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/swtch.S -o kernel/swtch.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/syscall.o kernel/syscall.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/sysfile.o kernel/sysfile.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/sysproc.o kernel/sysproc.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/timer.o kernel/timer.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/trapasm.S -o kernel/trapasm.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/trap.o kernel/trap.c
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/uart.o kernel/uart.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/vectors.S -o kernel/vectors.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o kernel/vm.o kernel/vm.c
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/multiboot.S -o kernel/multiboot.o
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/data.S -o kernel/data.o
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/bootother.S -o kernel/bootother.o
ld  -m    elf_i386 -nostdlib --omagic \
	--entry=start --section-start=.text=0x7000 \
	--output=kernel/bootother.out kernel/bootother.o
objcopy -S -O binary kernel/bootother.out bootother
gcc  -I include -nostdinc -ggdb  -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c kernel/initcode.S -o kernel/initcode.o
ld  -m    elf_i386 -nostdlib --omagic \
	--entry=start --section-start=.text=0x0 \
	--output=kernel/initcode.out kernel/initcode.o
objcopy -S -O binary kernel/initcode.out initcode
ld  -m    elf_i386 -nostdlib --omagic \
	--section-start=.text=0x100000 --entry=main --output=kernel/kernel \
	kernel/multiboot.o kernel/data.o kernel/bio.o kernel/console.o kernel/exec.o kernel/file.o kernel/fs.o kernel/ide.o kernel/ioapic.o kernel/kalloc.o kernel/kbd.o kernel/lapic.o kernel/main.o kernel/mp.o kernel/picirq.o kernel/pipe.o kernel/proc.o kernel/spinlock.o kernel/string.o kernel/swtch.o kernel/syscall.o kernel/sysfile.o kernel/sysproc.o kernel/timer.o kernel/trapasm.o kernel/trap.o kernel/uart.o kernel/vectors.o kernel/vm.o \
	-b binary initcode bootother
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB) copied, 0.0222608 s, 230 MB/s
dd if=kernel/bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes (512 B) copied, 4.9137e-05 s, 10.4 MB/s
dd if=kernel/kernel of=xv6.img seek=1 conv=notrunc
240+1 records in
240+1 records out
123116 bytes (123 kB) copied, 0.000331295 s, 372 MB/s


test build PASSED
 (build xv6 using make)

starting clone

**********************************************************************

Test clone
clone and verify that address space is shared

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/clone.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test clone PASSED (9 of 9)
 (clone and verify that address space is shared)

starting badclone

**********************************************************************

Test badclone
clone with bad stack argument

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/badclone.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
user/tester.c: 31 assert failed (clone(worker, 0, stack) == -1)
TEST FAILED

test badclone FAILED (0 of 6)
 (clone with bad stack argument)
 tester failed

starting join4

**********************************************************************

Test join4
join, not wait, should handle threads

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/join4.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 492 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test join4 PASSED (3 of 3)
 (join, not wait, should handle threads)

starting thread2

**********************************************************************

Test thread2
memory leaks from thread library?

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/thread2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED

test thread2 PASSED (7 of 7)
 (memory leaks from thread library?)

starting join3

**********************************************************************

Test join3
join should not handle child processes (forked)

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/join3.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 490 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED
$ 

test join3 PASSED (3 of 3)
 (join should not handle child processes (forked))

starting join2

**********************************************************************

Test join2
join argument checking

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/join2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 492 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test join2 PASSED (6 of 6)
 (join argument checking)

starting clone3

**********************************************************************

Test clone3
clone copies file descriptors, but doesn't share

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/clone3.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 492 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED

test clone3 PASSED (3 of 3)
 (clone copies file descriptors, but doesn't share)

starting clone2

**********************************************************************

Test clone2
clone and play with the argument

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/clone2.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test clone2 PASSED (6 of 6)
 (clone and play with the argument)

starting stack

**********************************************************************

Test stack
set up stack correctly (and without extra items)

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/stack.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test stack PASSED (8 of 8)
 (set up stack correctly (and without extra items))

starting size

**********************************************************************

Test size
check that address space size is updated in threads

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/size.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 492 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test size PASSED (7 of 7)
 (check that address space size is updated in threads)

starting multi

**********************************************************************

Test multi
multiple threads with some depth of function calls

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/multi.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 493 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test multi PASSED (8 of 8)
 (multiple threads with some depth of function calls)

starting noexit

**********************************************************************

Test noexit
no exit call in thread, should trap at bogus address

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/noexit.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
pid 4 tester: trap 14 err 5 on cpu 1 eip 0xffffffff addr 0xffffffff--kill proc
TEST PASSED

test noexit PASSED (7 of 7)
 (no exit call in thread, should trap at bogus address)

starting join

**********************************************************************

Test join
clone and join syscalls

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/join.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 492 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED

test join PASSED (9 of 9)
 (clone and join syscalls)

starting thread

**********************************************************************

Test thread
thread user library functions

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/thread.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 491 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED


test thread PASSED (10 of 10)
 (thread user library functions)

starting locks

**********************************************************************

Test locks
test lock correctness

**********************************************************************
Running xv6 user progam ../../../../tests/4b/tests/locks.c
Trying to build project using make
make
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 \
	-M -MG user/tester.c -MF user/tester.d -MT user/tester.d -MT user/tester.o
gcc  -I include -nostdinc -Wall -Werror -ggdb -fno-pic -fno-builtin -fno-strict-aliasing -fno-stack-protector -m32 -c -o user/tester.o user/tester.c
ld  -m    elf_i386 -nostdlib --omagic --entry=main --section-start=.text=0x0 --output=user/bin/tester user/tester.o user/ulib.o user/usys.o user/printf.o user/umalloc.o user/uthread.o
cp user/bin/tester fs/tester
./tools/mkfs fs.img fs
used 29 (bit 1 ninode 26) free 29 total 1024
mkdir
ln
forktest
pruebaClone
wc
init
sh
zombie
stressfs
kill
rm
README
usertests
ls
echo
cat
grep
tester
balloc: first 492 blocks have been allocated
balloc: write bitmap block at sector 28
rm user/bin/tester
make qemu-nox 
Ctrl+a h for help
qemu-system-i386 -nographic -hdb fs.img xv6.img -smp 2
QEMU 1.1.2 monitor - type 'help' for more information
(qemu) QEMU 1.1.2 monitor - type 'help' for more information
(qemu) 
xv6...
lapicinit: 1 0xfee00000
cpu1: starting
cpu0: starting
init: starting sh
$ tester
tester
TEST PASSED

test locks PASSED (8 of 8)
 (test lock correctness)

**********************************************************************
Summary:
test build PASSED
 (build xv6 using make)

test clone PASSED (9 of 9)
 (clone and verify that address space is shared)

test badclone FAILED (0 of 6)
 (clone with bad stack argument)
 tester failed

test join4 PASSED (3 of 3)
 (join, not wait, should handle threads)

test thread2 PASSED (7 of 7)
 (memory leaks from thread library?)

test join3 PASSED (3 of 3)
 (join should not handle child processes (forked))

test join2 PASSED (6 of 6)
 (join argument checking)

test clone3 PASSED (3 of 3)
 (clone copies file descriptors, but doesn't share)

test clone2 PASSED (6 of 6)
 (clone and play with the argument)

test stack PASSED (8 of 8)
 (set up stack correctly (and without extra items))

test size PASSED (7 of 7)
 (check that address space size is updated in threads)

test multi PASSED (8 of 8)
 (multiple threads with some depth of function calls)

test noexit PASSED (7 of 7)
 (no exit call in thread, should trap at bogus address)

test join PASSED (9 of 9)
 (clone and join syscalls)

test thread PASSED (10 of 10)
 (thread user library functions)

test locks PASSED (8 of 8)
 (test lock correctness)

Passed 15 of 16 tests.
Overall 15 of 16
Points 94 of 100
